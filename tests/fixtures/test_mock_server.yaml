file_version: stressor#0

# The run configuration defines how the `sequences` are executed in parallel
# sessions.
config:
  name: Test WebDAV
  tag:
  details: |
    This scenario runs some tests against a WebDAV server.
    We use it to test stressor against a locally running WsgiDAV server:
    - Open a terminal and run
      $ wsgidav --root tests/fixtures/htdocs --host 127.0.0.1 --port 8082 --auth anonymous --no-config
    - Open a second terminal and run
      $ stressor run tests/fixtures/test_mock_server
  verbose: 4
  base_url: http://127.0.0.1:8082
  request_timeout: 1.0
  # max_time: 3.2

# Initial context value definitions.
# All used parameters must be listed here in the form:
#   parameter_name: default_value
# Set `null` value to make it mandatory, i.e. must be passed by caller.
context:

sessions:
  users: $load(users.yaml)
  count: 3
  # basic_auth: true
  # max_duration: 15

# Define what actions should be performed by every session
scenario:
  - sequence: init
  - sequence: main
    # repeat: 3
    duration: 20
  - sequence: end


# List of named action sequences. Used as building blocks for scenarios
sequences:
  # 'init' is the reserved name for the set-up sequence.
  init:
    # Log-in
    - activity: HTTPRequest
      url: /
      method: OPTIONS
      assert_match_headers: ".*'DAV'.*"

    - activity: GetRequest
      # Use `base_url` by default:
      url: mock_login_response.json
      assert_json:
        result.user_guid: '[{]?[0-9a-fA-F\-]{36}[}]?'
      store_json:
        user_guid: "result.user_guid"

    # - activity: $debug()

  # Other sections can have arbitrary names and are excuted in order of appearance
  main:
    - activity: GetRequest
      url: /
      assert_match: ".*Index of /.*"
      assert_html:
        "//*[@class='logo']": true

    - activity: GetRequest
      url: /private/test.html
      auth: $(user.auth)
      assert_match: ".*Secret text.*"
      debug: true

    # - activity: $debug()

    - activity: PutRequest
      url: /wsgidav_test_file~$(session_id).txt
      data: "Test"
      assert_max_time: 0.5
      # debug: true
      monitor: true

    - activity: RunScript
      script: |
        new_val = "New URL:" + base_url

    - activity: RunScript
      name: "Print context"
      script: |
        from pprint import pprint
        pprint(locals())

    # - activity: RunScript
    #   name: "Print context 2"
    #   script: |
    #     print(locals())

    # - activity: $sleep(0.3)

    - activity: GetRequest
      url: /wsgidav_test_file~$(session_id).txt
      assert_match: "Test"

    - activity: $sleep(0.3)

    # - activity: $debug()

      # - activity: RunScript
    #   path: script_1.py
    # - activity: RunScript
    #   script: |
    #     temp = Fabulist.quote("${verb}")
    #     PutRequest(url="hurz")

  # 'end' is the reserved name for the tear-down sequence
  end:
    - activity: $sleep(0.1)

    - activity: DeleteRequest
      url: /wsgidav_test_file~$(session_id).txt
