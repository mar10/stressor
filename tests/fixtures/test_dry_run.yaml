file_version: stressor#0

# The run configuration defines how the `sequences` are executed in parallel
# sessions.
config:
  name: Test scenario 1
  details: Some details...
  base_url: http://127.0.0.1:8082
  request_timeout: 5.0

context:
  default_sleep: .03
  new_title: "test"

reporters:

sessions:
  users: $load(users.yaml)
  count: 2

# Define what actions should be performed by every session
scenario:
  - sequence: init
  - sequence: main
  - sequence: end

# List of named action sequences. Used as building blocks for scenarios
sequences:
  # 'init' is the reserved name for the set-up sequence
  init:
    # Log-in
    - activity: PostRequest
      url: $(base_url)/my-login-service
      params:
        name: $(user.name)
        password: $(user.password)
        custom: $(user.custom)
      assert_json:
        status: ok
      store_json:
        user_guid: result.guid
      # Allow unit-test in dry-run mode:
      mock_result:
        {
          "status": "ok",
          "result": { "guid": "{BBFC98E6-DD92-473C-A65C-BDD868E64CF2}" },
        }
      # debug: true

    - activity: Sleep
      duration: .01

    - activity: $sleep(.02)

    - activity: $sleep($(default_sleep))

    - activity: $sleep(0.01, 0.02)

    # - activity: $debug()

  # Other sections can have arbitrary names and are executed in order of appearance
  main:
    - activity: PostRequest
      # Use `base_url` by default:
      url: elements/
      params:
        title: $(new_title)
      assert_match: ".*Foo.*"
      # Allow unit-test in dry-run mode:
      mock_result: "<html><body>Test-Foo</body></html>"

    - activity: RunScript
      path: script_1.py

  # 'end' is the reserved name for the tear-down sequence
  end:
    - activity: DeleteRequest
      url: $(base_url)/my-logout
      params:
        guid: $(user_guid)
